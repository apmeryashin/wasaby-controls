<!--
   Внутренний шаблон отображения итема списка в том числе и итема группы
   @param {CollectionItem} item - модель итема коллекции который нужно отрендерить
-->
<ws:template name="localItemTemplate">
   <ws:partial
      item="{{ item }}"
      itemData="{{ item }}"
      template="{{ item.getTemplate(_options.itemTemplateProperty, _options.itemTemplate, _options.groupTemplate) }}"

      isAdd="{{ _options.isAdd }}"
      style="{{_options.style}}"
      searchValue="{{ _options.listModel.getSearchValue() }}"
      multiSelectVisibility="{{ _options.listModel.getMultiSelectVisibility() }}"

      attr:item-key="{{ item.key }}"
      attr:key="{{ _templateKeyPrefix }}-{{ item.getUid() }}"
      attr:data-qa="{{ item.listElementName }}"
      attr:style="_getMinMaxWidthStyle(_options.columnMinWidth, _options.columnMaxWidth)"
      attr:class="{{ _options.listModel.getViewIterator().isItemAtIndexHidden(index) ? 'controls-ListView__hiddenContainer' }}"

      on:click="_onItemClick(item)"
      on:contextmenu="_onItemContextMenu(item)"
      on:swipe="_onItemSwipe(item)"
      on:longtap="_onItemLongTap(item)"
      on:mouseenter="_onItemMouseEnter(item)"
      on:mousedown="_onItemMouseDown(item)"
      on:mouseup="_onItemMouseUp(item)"
      on:mousemove="_onItemMouseMove(item)"
      on:mouseleave="_onItemMouseLeave(item)"
      on:wheel="_onItemWheel(item)"
   >
      <ws:itemActionsTemplate>
         <!-- We have to support setting of "itemActionsClass" option in BaseControl and while using Controls/list:ItemTemplate -->
         <ws:partial
            itemData="{{ item }}"
            scope="{{ _options.listModel.getActionsTemplateConfig() }}"
            template="{{ _options.itemActionsTemplate || 'Controls/itemActions:ItemActionsTemplate' }}"
            itemActionsClass="{{ _options.itemActionsClass || _options.listModel.getActionsTemplateConfig().itemActionsClass }}"
         />
      </ws:itemActionsTemplate>
      <ws:swipeTemplate>
         <ws:partial
            itemData="{{ item }}"
            swipeConfig="{{ _options.listModel.getSwipeConfig() }}"
            scope="{{ _options.listModel.getActionsTemplateConfig() }}"
            template="{{ _options.swipeTemplate || 'Controls/itemActions:SwipeActionsTemplate' }}"
         />
      </ws:swipeTemplate>
   </ws:partial>
</ws:template>

<!--
   Внутренний шаблон, отвечающий за вывод колонок с итемами
   @param {GroupItem} [groupItem] - данные группы для которой идет рендер содержимого
-->
<ws:template name="localColumnsTemplate">
   <ws:for data="columnIndex in _options.listModel.getColumnsCount()">
      <div
         style="{{_getColumnStyle(columnIndex)}}"
         class="controls-ColumnsView_column {{_getColumnPaddingClasses()}}"
      >
         <div class="controls-ColumnsView_column-placeholder" style="{{_getPlaceholderStyle()}}"></div>

         <ws:for data="index, item in _options.listModel.getViewIterator(groupItem)">
            <ws:if data="{{item.getColumn() === columnIndex}}">
               <ws:partial template="localItemTemplate"/>
            </ws:if>
         </ws:for>
      </div>
   </ws:for>
</ws:template>


<div class="
   controls-ListViewV
   controls-ColumnsView
   controls_columns_theme-{{_options.theme}}
   {{_getItemsPaddingContainerClasses()}}
">
   <ws:if data="{{ _options.listModel }}">
      <!--Top loading indicator-->
      <ws:partial if="{{ _listModel.getTopIndicator() }}"
                  template="{{_listModel.getTopIndicator().getTemplate()}}"
                  item="{{_listModel.getTopIndicator()}}"
                  on:click="_onIndicatorClick(_listModel.getTopIndicator())"/>
      <!--Top loading trigger-->
      <div name="topLoadingTrigger"
           class="controls-BaseControl__loadingTrigger"
           data-qa="loading-trigger-top">
      </div>

      <!-- Items (CSS Grid) -->
      <div
         name="itemsContainer"
         data-qa="items-container"
         style="{{_getItemsContainerStyle()}}"
         class="controls-ColumnsView__itemsContainer {{_options.itemsContainerClass}}"
      >
         <!-- Если задана группировка, то начинаем с рендера групп внутри которого рендерим колонки -->
         <ws:if data="{{_listModel.getGroup()}}">
            <ws:for data="groupIndex, groupItem in _options.listModel.getGroupsIterator()">
               <!-- Заголовок группы -->
               <div class="controls-ColumnsView_column controls-ColumnsView_column-group">
                  <ws:partial template="localItemTemplate" item="{{groupItem}}"/>
               </div>

               <!-- Рендер колонок группы -->
               <ws:partial template="localColumnsTemplate" groupItem="{{groupItem}}"/>
            </ws:for>
         </ws:if>
         <!-- Без группировки просто рендерим колонки -->
         <ws:else>
            <ws:partial template="localColumnsTemplate"/>
         </ws:else>
      </div>

      <!--Bottom loading trigger-->
      <div name="bottomLoadingTrigger"
           class="controls-BaseControl__loadingTrigger"
           data-qa="loading-trigger-bottom">
      </div>
      <!--Bottom loading indicator-->
      <ws:partial if="{{ _listModel.getBottomIndicator() }}"
                  template="{{_listModel.getBottomIndicator().getTemplate()}}"
                  item="{{_listModel.getBottomIndicator()}}"
                  on:click="_onIndicatorClick(_listModel.getBottomIndicator())"/>
   </ws:if>

   <ws:if data="{{ _listModel.getEmptyTemplateItem() }}">
      <ws:partial template="{{ _listModel.getEmptyTemplateItem().getTemplate(_options.emptyTemplate) }}"
                  item="{{ _listModel.getEmptyTemplateItem() }}"/>
   </ws:if>

   <ws:if data="{{ _options.footerTemplate }}">
      <div attr:class="{{_getFooterClasses()}}">
         <ws:partial template="{{ _options.footerTemplate }}" />
      </div>
   </ws:if>

   <!--Global loading indicator-->
   <ws:partial if="{{ _listModel.getGlobalIndicator() }}"
               template="{{_listModel.getGlobalIndicator().getTemplate()}}"
               item="{{_listModel.getGlobalIndicator()}}"/>

   <Controls.event:Listener event="controlResize" on:controlResize="_resizeHandler()"/>
</div>
