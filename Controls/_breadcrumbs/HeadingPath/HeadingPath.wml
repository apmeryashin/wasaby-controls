<div class="controls_breadcrumbs_theme-{{_options.theme}}
            controls-BreadCrumbsPath{{_options.withoutBackButton && _breadCrumbsItems !== null  ? ' controls-BreadCrumbsPath__twoRows' : ''}}">
    <div class="controls-BreadCrumbsPath__wrapper {{_options.displayMode === 'multiline' ? 'controls-BreadCrumbsPath__wrapper__multiline'}}">
        <ws:if data="{{ _backButtonCaption && !_options.withoutBackButton }}">
            <Controls._breadcrumbs.HeadingPath.Back backButtonCaption="{{_backButtonCaption}}"
                                                    backgroundStyle="{{_options.backgroundStyle || _options.style}}"
                                                    backButtonClass="{{_backButtonClass}}"
                                                    counterCaption="{{ _getCounterCaption(_items) }}"
                                                    showArrowOutsideOfBackButton="{{!_breadCrumbsItems && !_options.rootVisible}}"
                                                    backButtonStyle="{{ _options.backButtonStyle }}"
                                                    backButtonIconStyle="{{ _options.backButtonIconStyle }}"
                                                    backButtonFontColorStyle="{{ _options.backButtonFontColorStyle }}"
                                                    backButtonNewIcon="{{_options.feature1182709671 ? true : _options.backButtonNewIcon}}"
                                                    backButtonFontSize="{{_options.backButtonFontSize}}"
                                                    showActionButton="{{_options.showActionButton}}"
                                                    displayMode="{{_options.displayMode}}"
                                                    afterBackButtonTemplate="{{_options.afterBackButtonTemplate}}"
                                                    theme="{{_options.theme}}"
                                                    attr:class="{{!_visibleItems || _options.displayMode === 'multiline' ? 'controls-BreadCrumbsPath__backButton__wrapper__only'}} "
                                                    on:backButtonClick="_onBackButtonClick()"
                                                    on:arrowClick="_notifyHandler('arrowClick')"
            >
               <ws:beforeCaptionTemplate>
                  <ws:if data="{{_options.backButtonBeforeCaptionTemplate}}">
                     <div class="controls-BreadCrumbsPath__backButton__before-caption-wrapper">
                        <ws:partial
                           template="{{_options.backButtonBeforeCaptionTemplate}}"
                           item="{{_backButtonItem}}"
                           attr:class="controls-BreadCrumbsPath__backButton__before-caption-content"
                        />
                     </div>
                  </ws:if>
                  <ws:else>
                     <invisible-node/>
                  </ws:else>
               </ws:beforeCaptionTemplate>
            </Controls._breadcrumbs.HeadingPath.Back>
        </ws:if>

        <ws:if data="{{_visibleItems || _options.rootVisible || _options.feature1182709671}}">
            <div
               class="
                  controls-BreadCrumbsPath__crumbsWrapper
                  {{_visibleItems || !_options.displayMode === 'multiline' ? 'controls-BreadCrumbsPath__crumbsWrapper_fullWidth'}}
                  {{_options.displayMode === 'multiline' ? 'controls-BreadCrumbsPath__twoRows'}}
               "
            >
               <ws:if data="{{_options.feature1182709671}}">
                  <div class="controls-BreadCrumbsPath__pathButton-wrapper">
                     <Controls._breadcrumbs.PathButton
                        path="{{_items}}"
                        source="{{_options.pathButtonSource}}"
                        filter="{{_options.pathButtonFilter}}"
                        keyProperty="{{_options.pathButtonKeyProperty}}"
                        nodeProperty="{{_options.pathButtonNodeProperty}}"
                        parentProperty="{{_options.pathButtonParentProperty}}"
                        displayProperty="{{_options.pathButtonDisplayProperty}}"
                        on:pathChanged="_onPathChanged()"
                        attr:class="controls-BreadCrumbsPath__pathButton"
                     />
                  </div>
               </ws:if>
               <ws:else>
                  <div
                     class="
                        controls-BreadCrumbsPath__homeContainer
                        {{ _applyHighlighter(_options.highlighter, _items ? _items[0].get(_options.parentProperty) : _options.root) }}
                        {{_options.withoutBackButton || _options.displayMode === 'multiline'
                           ? ' controls-BreadCrumbsPath__homeContainer__withoutBackButton'
                           : ' controls-BreadCrumbsPath__homeContainer__withBackButton'}}
                     "
                     on:mouseEnter="_notifyHandler('hoveredItemChanged', _getRootModel(_items ? _items[0].get(_options.parentProperty) : _options.root, _options.keyProperty))"
                     on:mouseLeave="_notifyHandler('hoveredItemChanged')"
                     on:click="_onHomeClick()"
                  >
                     <div class="controls-BreadCrumbsPath__home icon-Home3"></div>
                  </div>
               </ws:else>

               <ws:if data="{{_visibleItems}}">
                  <Controls._breadcrumbs.View
                     attr:class="controls-BreadCrumbsPath__breadCrumbs_home-path-spacing controls-BreadCrumbsPath__breadCrumbs {{_breadCrumbsClass}}"
                     items="{{_breadCrumbsItems}}"
                     visibleItems="{{_visibleItems}}"
                     backgroundStyle="{{_options.backgroundStyle || _options.style}}"
                     keyProperty="{{_options.keyProperty}}"
                     displayProperty="{{_options.displayProperty}}"
                     highlighter="{{_options.highlighter}}"
                     fontColorStyle="{{_options.fontColorStyle}}"
                     fontSize="{{_options.fontSize}}"
                     containerWidth="{{_options.containerWidth}}"
                     on:hoveredItemChanged="_notifyHandler('hoveredItemChanged')"
                     on:itemClick="_notifyHandler('itemClick')"
                  />
               </ws:if>
            </div>
        </ws:if>
   </div>
</div>
