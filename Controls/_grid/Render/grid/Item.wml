<ws:template name="COLUMN">
    <div if="{{ gridColumn.Markable && gridColumn.shouldDisplayMarker(marker) }}"
         class="{{ gridColumn.getMarkerClasses(markerClassName, itemPadding) }}"
         attr:data-qa="marker"></div>
    <!-- TODO избавиться от прокидывания _onBreadcrumbClick https://online.sbis.ru/doc/0649e69a-d507-4024-9f99-c70205f535ef-->
    <ws:partial template="{{ gridColumn.getTemplate() }}"
                scope="{{ gridColumn.config.templateOptions }}"
                attr:key="{{ gridColumn.getInstanceId() }}"
                item="{{ (item || itemData) }}"
                column="{{ gridColumn }}"
                itemData="{{ gridColumn }}"
                gridColumn="{{ gridColumn }}"
                colData="{{ gridColumn }}"
                theme="{{ theme }}"
                style="{{ style }}"
                cursor="{{ cursor }}"
                containerSize="{{ containerSize }}"
                backgroundColorStyle="{{ backgroundColorStyle }}"
                backgroundStyle="{{ backgroundStyle }}"
                highlightOnHover="{{ highlightOnHover }}"
                itemActionsTemplate="{{ itemActionsTemplate }}"
                itemActionsClass="{{ itemActionsClass }}"
                templateHighlightOnHover="{{ templateHighlightOnHover }}"
                hoverBackgroundStyle="{{ hoverBackgroundStyle }}"
                tagTemplate="{{ gridColumn.TagCell ? tagTemplate : undefined }}"
                tagStyle="{{ gridColumn.TagCell ? tagStyle : undefined }}"
                editArrowTemplate="{{ editArrowTemplate }}"
                _onBreadcrumbClick="{{_onBreadcrumbClick}}"
                _onBreadcrumbItemClick="{{_onBreadcrumbItemClick}}">
        <ws:ladderWrapper>
            <ws:partial template="{{ladderWrapper.content}}"
                        if="{{ gridColumn.LadderContentCell && (item || itemData).shouldDrawLadderContent(ladderWrapper.ladderProperty, ladderWrapper.stickyProperty) }}"
                        attr:class="{{ (item || itemData).getLadderWrapperClasses(ladderWrapper.ladderProperty, ladderWrapper.stickyProperty) }}"/>
        </ws:ladderWrapper>
        <ws:multiSelectTemplate>
            <ws:partial template="{{ (item || itemData).getMultiSelectTemplate() }}" item="{{ (item || itemData) }}" />
        </ws:multiSelectTemplate>
        <ws:afterContentTemplate>
            <!-- Стрелка редактирования -->
            <ws:if data="{{ afterContentTemplate.shouldDisplayEditArrow && editArrowTemplate }}">
                <ws:partial template="{{ editArrowTemplate }}" item="{{ (gridColumn || itemData).getOwner() }}" textOverflow="{{(gridColumn || itemData).config.textOverflow}}"/>
            </ws:if>

            <!-- Тэг -->
            <div if="{{ (gridColumn || itemData).TagCell && (gridColumn || itemData).shouldDisplayTag(afterContentTemplate.tagStyle) }}"
                 class="{{ (gridColumn || itemData).getTagClasses() }}">
                <ws:partial template="{{ afterContentTemplate.tagTemplate }}"
                            tagStyle="{{ (gridColumn || itemData).getTagStyle(afterContentTemplate.tagStyle) }}"
                            item="{{ item || itemData }}"
                            columnIndex="{{ (gridColumn || itemData).getColumnIndex() }}"/>
            </div>
        </ws:afterContentTemplate>
    </ws:partial>

    <ws:if data="{{ gridColumn.ItemActionsCell && gridColumn.shouldDisplayItemActions() }}">
        <ws:if data="{{ (item || itemData).isSwiped() && itemActionsPosition !== 'outside' }}">
            <ws:partial template="{{ swipeTemplate }}"
                        highlightOnHover="{{ highlightOnHover }}"/>
        </ws:if>
        <ws:else data="{{ itemActionsPosition !== 'custom' }}">
            <ws:partial template="{{ itemActionsTemplate }}"
                        itemData="{{ item || itemData }}"
                        itemActionsClass="{{ itemActionsClass }}"
                        highlightOnHover="{{ highlightOnHover }}"/>
        </ws:else>
    </ws:if>

    <ws:if data="{{ (gridColumn || itemData).Draggable && (gridColumn || itemData).shouldDisplayDraggingCounter() }}">
        <span class="controls-ListView__item-dragging-counter">{{ (item || itemData).getDraggedItemsCountString() }}</span>
    </ws:if>
</ws:template>


<ws:if data="{{ isSticked !== false && (item || itemData).isSticked(stickyCallback, item) }}">
    <Controls.scroll:Group>
        <div attr:data-qa="{{ (item || itemData).listElementName }}"
             attr:class="{{ (item || itemData).getItemClasses({
                'highlightOnHover': highlightOnHover,
                'cursor': cursor,
                'clickable': clickable,
                'showItemActionsOnHover': showItemActionsOnHover
            }) }}">
            <ws:for data="columnIndex, column in (item || itemData).getColumns()">
                <Controls.scroll:StickyBlock position="{{ (item || itemData).getStickyHeaderPosition(stickyCallback) }}"
                                              mode="{{ (item || itemData).getStickyHeaderMode(stickyCallback) }}"
                                              backgroundStyle="{{ column.getStickyBackgroundStyle() }}"
                                              shadowVisibility="{{column.shadowVisibility}}"
                                              _isIosZIndexOptimized="{{ (item || itemData).isIosZIndexOptimized() }}"
                                              fixedZIndex="{{ column.getZIndex()}}"
                                              _subPixelArtifactFix="{{columnIndex !== 0}}"
                                              attr:key="sticky_{{ column.getInstanceId() }}"
                                              attr:class="{{ column.getWrapperClasses(backgroundColorStyle, highlightOnHover, hoverBackgroundStyle) }}"
                                              attr:style="{{ column.getWrapperStyles(containerSize) }}"
                                              attr:data-qa="{{ column.listElementName }}">
                    <ws:partial template="COLUMN" gridColumn="{{ column }}"/>
                </Controls.scroll:StickyBlock>
            </ws:for>
        </div>
    </Controls.scroll:Group>
</ws:if>
<ws:else>
    <div attr:data-qa="{{ (item || itemData).listElementName }}"
         attr:class="{{ (item || itemData).getItemClasses({
                'highlightOnHover': highlightOnHover,
                'cursor': cursor,
                'clickable': clickable,
                'showItemActionsOnHover': showItemActionsOnHover
            }) }}">
        <ws:for data="column in (item || itemData).getColumns()">
            <div class="{{ column.getWrapperClasses(backgroundColorStyle, highlightOnHover, hoverBackgroundStyle) }}"
                 style="{{ column.getWrapperStyles(containerSize) }}"
                 attr:data-qa="{{ column.listElementName }}">
                <ws:partial template="COLUMN" gridColumn="{{ column }}"/>
            </div>
        </ws:for>
    </div>
</ws:else>
