<ws:template name="gridView">
    <table class="{{ _getGridViewClasses(_options) }}"
           style="{{ _getGridViewStyles(_options) }}">

        <!-- Colgroup. Describes columns widths -->
        <ws:partial template="wml!Controls/_grid/Render/table/Colgroup" colgroup="{{ _listModel.getColgroup() }}"/>

        <!-- Оптимизация ширин в таблице при table-layout: fixed -->
        <!-- В определенных случаях в таблице первая строка может иметь колспан кячеек. -->
        <!-- При table-layout: fixed ширины колонок расчитываются по первой строке. -->
        <!-- В таком случае, ширины расчитаются по ячейке с колспаном, что неверно. -->
        <thead>
            <tr>
                <ws:for data="index, width in _getGridTemplateColumnsWidth(_options)">
                    <td attr:key="fake_width_{{index}}">
                        <div style="min-width: {{ width }}; max-width: {{ width }};"></div>
                    </td>
                </ws:for>
            </tr>
        </thead>

        <!-- Контрол строит наиболее полный набор колонок таблицы. Подробное описание в контроле. -->
        <Controls.columnScroll:RelativeColumns
                if="{{ _options.columnScroll }}"
                isFullGridSupport="{{ false }}"
                containersUpdatedCallback="{{ _relativeCellContainersUpdateCallback }}"
                viewColumns="{{ _getViewColumns(_options) }}"/>

        <!-- Header -->
        <Controls.scroll:VirtualScrollContainer if="{{ _listModel.getHeader() }}" position="top">
            <thead attr:name="header" class="{{ _listModel.getHeader().getBodyClasses() }}">
            <ws:for data="headerRow in _listModel.getHeader().getRows()">
                <ws:partial template="{{ headerRow.getTemplate() }}"
                            item="{{ headerRow }}"
                            style="{{ _options.style }}"
                            backgroundStyle="{{ _options.backgroundStyle || _options.style }}"/>
            </ws:for>
            </thead>
        </Controls.scroll:VirtualScrollContainer>

        <!-- Results (top) -->
        <Controls.scroll:VirtualScrollContainer if="{{ _listModel.getResults() && _listModel.getResultsPosition() === 'top' }}" position="top">
            <thead>
                <ws:partial template="{{ _listModel.getResults().getTemplate() }}"
                            attr:name="results"
                            item="{{ _listModel.getResults() }}"
                            style="{{ _options.style }}"
                            backgroundStyle="{{ _options.backgroundStyle || _options.style }}"/>
            </thead>
        </Controls.scroll:VirtualScrollContainer>

        <!--Top loading indicator-->
        <tbody>
            <ws:partial if="{{ _listModel.getTopIndicator() }}"
                        template="{{_listModel.getTopIndicator().getTemplate()}}"
                        item="{{_listModel.getTopIndicator()}}"
                        colspan="{{ _listModel.getIndicatorColspan() }}"
                        on:click="_onIndicatorClick(_listModel.getTopIndicator())"/>
            <!--Top loading trigger-->
            <tr>
                <td colspan="{{ _listModel.getIndicatorColspan() }}">
                    <div class="controls-BaseControl__loadingTrigger">
                        <div name="topLoadingTrigger"
                             class="controls-GridView__loadingTrigger_notFullGridSupport"
                             data-qa="loading-trigger-top">
                        </div>
                    </div>
                </td>
            </tr>
        </tbody>
        <!-- Items -->
        <tbody name="itemsContainer" class="controls-GridViewV__itemsContainer" attr:data-qa="items-container">

        <!-- TODO избавиться от прокидывания _onBreadcrumbClick https://online.sbis.ru/doc/0649e69a-d507-4024-9f99-c70205f535ef-->
        <ws:partial
                template="Controls/baseList:ForTemplate"
                itemTemplate="{{ _itemTemplate }}"
                collection="{{ _listModel }}"
                keyPrefix="gridView-item"

                style="{{ _options.style }}"
                theme="{{ _options.theme }}"
                itemTemplateProperty="{{ _options.itemTemplateProperty }}"
                groupTemplate="{{ _groupTemplate }}"
                itemActionsPosition="{{ _options.itemActionsPosition }}"
                itemActionsTemplate="{{ _options.itemActionsTemplate }}"
                itemActionsClass="{{ _options.itemActionsClass }}"
                swipeTemplate="{{ _options.swipeTemplate }}"
                backgroundStyle="{{ _options.backgroundStyle || _options.style }}"
                tagTemplate="{{ _options.tagTemplate }}"

                _onBreadcrumbClick="{{_onBreadcrumbClick}}"
                _onBreadcrumbItemClick="{{_onBreadcrumbItemClick}}">
            <ws:editArrowTemplate>
                <ws:partial template="wml!Controls/_grid/Render/EditArrowTemplate"/>
            </ws:editArrowTemplate>
        </ws:partial>
        </tbody>

        <!-- emptyTemplate -->
        <ws:if data="{{ _listModel.getEmptyGridRow() && _isEmpty() }}">
            <ws:partial template="{{ _listModel.getEmptyGridRow().getTemplate() }}"
                        attr:name="emptyView"
                        item="{{ _listModel.getEmptyGridRow() }}"
                        style="{{ _options.style }}"
                        containerSize="{{ _getColumnScrollEmptyViewMaxWidth() }}"
                        backgroundStyle="{{ _options.backgroundStyle || _options.style }}"/>
        </ws:if>

        <!--Bottom loading trigger-->
        <tbody>
            <tr>
                <td colspan="{{ _listModel.getIndicatorColspan() }}">
                    <div class="controls-BaseControl__loadingTrigger">
                        <div name="bottomLoadingTrigger"
                             class="controls-GridView__loadingTrigger_notFullGridSupport"
                             data-qa="loading-trigger-bottom">
                        </div>
                    </div>
                </td>
            </tr>

            <!--Bottom loading indicator-->
            <ws:partial if="{{ _listModel.getBottomIndicator() }}"
                        template="{{_listModel.getBottomIndicator().getTemplate()}}"
                        item="{{_listModel.getBottomIndicator()}}"
                        colspan="{{ _listModel.getIndicatorColspan() }}"
                        on:click="_onIndicatorClick(_listModel.getBottomIndicator())"/>
        </tbody>

        <!-- Results (bottom) -->
        <Controls.scroll:VirtualScrollContainer if="{{ _listModel.getResults() && _listModel.getResultsPosition() === 'bottom' }}" position="top">
            <ws:partial template="{{ _listModel.getResults().getTemplate() }}"
                        attr:name="results"
                        item="{{ _listModel.getResults() }}"
                        style="{{ _options.style }}"
                        backgroundStyle="{{ _options.backgroundStyle || _options.style }}"/>
        </Controls.scroll:VirtualScrollContainer>

        <!-- Footer -->
        <ws:if data="{{ _listModel.getFooter() }}">
            <ws:partial template="{{ _listModel.getFooter().getTemplate() }}"
                        attr:name="footer"
                        item="{{ _listModel.getFooter() }}"
                        containerSize="{{ _getColumnScrollEmptyViewMaxWidth() }}"
                        style="{{ _options.style }}"
                        backgroundStyle="{{ _options.backgroundStyle || _options.style }}"/>
        </ws:if>

        <!--Global loading indicator-->
        <ws:partial if="{{ _listModel.getGlobalIndicator() }}"
                    template="{{_listModel.getGlobalIndicator().getTemplate()}}"
                    item="{{_listModel.getGlobalIndicator()}}"/>
    </table>
</ws:template>

<div name="gridWrapper"
     on:wheel="_onColumnScrollViewWheel()"
     on:mouseenter="_onColumnScrollViewMouseEnter()"
     on:focusIn="_onFocusIn()"
     class="{{ _getGridViewWrapperClasses(_options) }}">

    <style attr:name="redrawWrapperStyles" data-vdom-ignore="true"></style>

    <ws:if data="{{ _options.columnScroll }}">
        <Controls.columnScroll:StyleContainers name="columnScrollStyleContainers"/>
        <Controls.columnScroll:Shadows backgroundStyle="{{ _options.backgroundStyle }}"
                                       needBottomPadding="{{ _options.needBottomPadding }}"/>
        <Controls.columnScroll:DragScrollOverlay if="{{ _isDragScrollEnabledByOptions(_options) }}"
                                                 on:mousemove="_onColumnScrollDragScrolling('mouse')"
                                                 on:touchmove="_onColumnScrollDragScrolling('touch')"
                                                 on:mouseup="_onColumnScrollStopDragScrolling('mouse')"
                                                 on:touchend="_onColumnScrollStopDragScrolling('touch')"
                                                 on:mouseleave="_onColumnScrollStopDragScrolling('mouse')"/>
        <Controls.event:Listener event="controlResize" on:controlResize="_onColumnScrollViewResized()"/>
    </ws:if>

    <!-- Скроллбар горизонтального скролла. -->
    <ws:if data="{{ _options.columnScroll }}">
        <Controls.columnScroll:ScrollBar
                name="horizontalScrollBar"
                attr:style="{{ _getColumnScrollThumbStyles(_options) }}"
                mode="{{ _options.columnScrollViewMode || 'scrollBar' }}"
                readOnly="{{ _options.columnScrollViewMode === 'arrowButtons' && (_$pendingMouseEnterForActivate || !_$columnScrollController) }}"
                stickyHeader="{{ false }}"
                backgroundStyle="{{ _options.backgroundStyle || _options.style }}"
                on:positionChanged="_onColumnScrollThumbPositionChanged()"
                on:dragEnd="_onColumnScrollThumbDragEnd()"/>
    </ws:if>

    <!-- Контент таблицы -->
    <ws:partial template="gridView"
                attr:name="grid"
                on:mousedown="_onColumnScrollStartDragScrolling('mouse')"
                on:touchstart="_onColumnScrollStartDragScrolling('touch')"
                on:mousemove="_onColumnScrollDragScrolling('mouse')"
                on:touchmove="_onColumnScrollDragScrolling('touch')"
                on:mouseup="_onColumnScrollStopDragScrolling('mouse')"
                on:touchend="_onColumnScrollStopDragScrolling('touch')"/>
</div>
