<tr attr:data-qa="{{ item.listElementName }}"
    attr:class="{{ item.getItemClasses({
        'highlightOnHover': highlightOnHover,
        'cursor': cursor,
        'clickable': clickable,
        'showItemActionsOnHover': showItemActionsOnHover
    }) }}">
    <ws:for data="gridColumn in item.getColumns()">
        <td attr:class="{{ gridColumn.getWrapperClasses(backgroundColorStyle, highlightOnHover, hoverBackgroundStyle) }}"
            attr:style="{{ gridColumn.getWrapperStyles(containerSize) }}"
            attr:colspan="{{ gridColumn.getColspan() }}"
            attr:rowspan="{{ gridColumn.getRowspan() }}"
            attr:data-qa="{{ gridColumn.listElementName }}">
            <div class="{{ gridColumn.getRelativeCellWrapperClasses() }} {{ gridColumn.isHidden() ? 'ws-hidden' }}"
                 style="{{ gridColumn.getRelativeCellWrapperStyles() }}">
                <div if="{{ gridColumn.Markable && gridColumn.shouldDisplayMarker(marker) }}"
                     attr:class="{{ gridColumn.getMarkerClasses() }}"
                     attr:data-qa="marker"></div>
                <!-- TODO избавиться от прокидывания _onBreadcrumbClick https://online.sbis.ru/doc/0649e69a-d507-4024-9f99-c70205f535ef-->
                <ws:partial template="{{ gridColumn.getTemplate() }}"
                            scope="{{ gridColumn.config.templateOptions }}"
                            attr:key="{{ gridColumn.getInstanceId() }}"
                            item="{{ (item || itemData) }}"
                            column="{{ gridColumn }}"
                            itemData="{{ gridColumn }}"
                            gridColumn="{{ gridColumn }}"
                            colData="{{ gridColumn }}"
                            theme="{{ theme }}"
                            style="{{ style }}"
                            cursor="{{ cursor }}"
                            containerSize="{{ containerSize }}"
                            backgroundColorStyle="{{ backgroundColorStyle }}"
                            backgroundStyle="{{ backgroundStyle }}"
                            highlightOnHover="{{ highlightOnHover }}"
                            itemActionsTemplate="{{ itemActionsTemplate }}"
                            itemActionsClass="{{ itemActionsClass }}"
                            templateHighlightOnHover="{{ templateHighlightOnHover }}"
                            hoverBackgroundStyle="{{ hoverBackgroundStyle }}"
                            fontColorStyle="{{ fontColorStyle }}"
                            tagTemplate="{{ gridColumn.TagCell ? tagTemplate }}"
                            tagStyle="{{ gridColumn.TagCell ? tagStyle }}"
                            editArrowTemplate="{{ editArrowTemplate }}"

                            _onBreadcrumbClick="{{_onBreadcrumbClick}}"
                            _onBreadcrumbItemClick="{{_onBreadcrumbItemClick}}">
                    <ws:ladderWrapper>
                        <ws:partial template="{{ladderWrapper.content}}"
                                    attr:class="{{ (item || itemData).getLadderWrapperClasses(ladderWrapper.ladderProperty, ladderWrapper.stickyProperty) }}"/>
                    </ws:ladderWrapper>
                    <ws:multiSelectTemplate>
                        <ws:partial template="{{ (item || itemData).getMultiSelectTemplate() }}" item="{{ (item || itemData) }}" />
                    </ws:multiSelectTemplate>
                    <ws:afterContentTemplate>
                        <!-- Стрелка редактирования -->
                        <ws:if data="{{ afterContentTemplate.shouldDisplayEditArrow && editArrowTemplate }} ">
                            <ws:partial template="{{ editArrowTemplate }}" item="{{ (gridColumn || itemData).getOwner() }}" textOverflow="{{(gridColumn || itemData).config.textOverflow}}"/>
                        </ws:if>

                        <!-- Тэг -->
                        <div if="{{ (gridColumn || itemData).TagCell && (gridColumn || itemData).shouldDisplayTag(afterContentTemplate.tagStyle) }}"
                             class="{{ (gridColumn || itemData).getTagClasses() }}">
                            <ws:partial template="{{ afterContentTemplate.tagTemplate }}"
                                        tagStyle="{{ (gridColumn || itemData).getTagStyle(afterContentTemplate.tagStyle) }}"
                                        item="{{ item || itemData }}"
                                        columnIndex="{{ (gridColumn || itemData).getColumnIndex() }}"/>
                        </div>
                    </ws:afterContentTemplate>
                </ws:partial>
                <ws:if data="{{ gridColumn.ItemActionsCell && gridColumn.shouldDisplayItemActions() }}">
                    <ws:if data="{{ (item || itemData).isSwiped() && itemActionsPosition !== 'outside' }}">
                        <ws:partial template="{{ swipeTemplate }}"
                                    highlightOnHover="{{ highlightOnHover }}"/>
                    </ws:if>
                    <ws:else data="{{ itemActionsPosition !== 'custom' }}">
                        <ws:partial template="{{ itemActionsTemplate }}"
                                    itemData="{{ item || itemData }}"
                                    itemActionsClass="{{ itemActionsClass }}"
                                    highlightOnHover="{{ highlightOnHover }}"/>
                    </ws:else>
                </ws:if>

                <ws:if data="{{ (gridColumn || itemData).Draggable && (gridColumn || itemData).shouldDisplayDraggingCounter() }}">
                    <span class="controls-ListView__item-dragging-counter">{{ (item || itemData).getDraggedItemsCountString() }}</span>
                </ws:if>
            </div>
        </td>
    </ws:for>
</tr>
