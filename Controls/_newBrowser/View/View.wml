<ws:template name="masterTemplate">
    <div class="controls-newBrowser__master">
        <ws:if data="{{_options.masterHeaderTemplate}}">
            <ws:partial template="{{_options.masterHeaderTemplate}}"/>
        </ws:if>
        <!-- markedKey нужно менять прикладнику, т.к есть пункты, которые являются не рутом, а фильтром. Уйдет, когда фильтр будет в мастере -->
        <Controls.list:Container id="master">
            <Controls.explorer:View
                    scope="{{_masterExplorerOptions}}"
                    name="masterList"
                    markedKey="{{_options.master.markedKey || _detailExplorerOptions.root}}"
                    style="master"
                    loading="{{_masterLoading}}"
                    on:dragStart="_notifyHandler('masterDragStart')"
                    on:dragEnd="_notifyHandler('masterDragEnd')"
                    on:dragEnter="_notifyHandler('masterDragEnter')"
                    on:arrowClick="_notifyHandler('masterArrowClick')"
                    on:editArrowClick="_notifyHandler('masterEditArrowClick')"
                    on:beforeItemsMove="_notifyHandler('masterBeforeItemsMove')"
                    on:actionClick="_notifyHandler('masterActionClick')"
                    on:itemClick="_onExplorerItemClick(true)"
                    on:changeDragTarget="_notifyHandler('masterChangeDragTarget')"
            />
        </Controls.list:Container>
        <ws:if data="{{_options.masterFooterTemplate}}">
            <ws:partial template="{{_options.masterFooterTemplate}}"/>
        </ws:if>
    </div>
</ws:template>

<ws:template name="detailTemplate">
    <div class="controls-newBrowser__detail" style="background-color: {{_detailBgColor}};">
        <ws:if data="{{_options.detailHeaderTemplate}}">
            <ws:partial template="{{_options.detailHeaderTemplate}}"/>
        </ws:if>

        <ws:if data="{{_options.detailContentTemplate}}">
            <ws:partial
                    template="{{_options.detailContentTemplate}}"
                    tileCfg="{{_tileCfg}}"
                    listCfg="{{_listCfg}}"
                    loading="{{_detailLoading}}"
                    imageViewMode="{{_getImageViewMode(!_listLoaded || !_tileLoaded ? _appliedViewMode : viewMode)}}"
                    nodeImageViewMode="{{_getNodeImageViewMode(!_listLoaded || !_tileLoaded ? _appliedViewMode : viewMode)}}"
                    imagePosition="{{_getImagePosition(!_listLoaded || !_tileLoaded ? _appliedViewMode : viewMode)}}"
                    attr:class="controls-newBrowser__detail-list"
                    on:itemClick="_onExplorerItemClick(false)"
                    on:viewModeChanged="_onDetailExplorerChangedViewMode()"
                    scope="{{_detailExplorerOptions}}"
            />
        </ws:if>
        <ws:else>
            <!-- beforeBeginEdit юзают для отмены редактирования узлов, нужна доработка списков
                 beforeEndEdit юзают для кастомной логики сохранения записи, т.к не хотят менять БЛ -->
            <Controls.list:Container id="detail">
                <Controls.list:HotKeysContainer>
                    <Controls.listTemplates:ImageDisplayContainer scope="{{_detailExplorerOptions}}"
                                                                  imageViewMode="{{_getImageViewMode(!_listLoaded || !_tileLoaded ? _appliedViewMode : viewMode)}}"
                                                                  nodeImageViewMode="{{_getNodeImageViewMode(!_listLoaded || !_tileLoaded ? _appliedViewMode : viewMode)}}"
                                                                  imagePosition="{{_getImagePosition(!_listLoaded || !_tileLoaded ? _appliedViewMode : viewMode)}}"
                                                                  columns="{{_columns}}">
                        <ws:content>
                            <Controls.explorer:View
                                    attr:class="controls-newBrowser__detail-list"
                                    afterBreadCrumbsTemplate="{{_options.detail.afterBreadCrumbsTemplate}}"
                                    breadcrumbsVisibility="{{_getDetailBreadCrumbsVisibility(_options.detail)}}"
                                    loading="{{_detailLoading}}"
                                    name="detailList"
                                    searchValue="{{_options.searchValue}}"
                                    tileSize="{{_tileCfg.tileSize}}"
                                    viewMode="{{viewMode}}"
                                    on:actionClick="_notifyHandler('detailActionClick')"
                                    on:afterBeginEdit="_notifyHandler('afterBeginEdit')"
                                    on:afterEndEdit="_notifyHandler('afterEndEdit')"
                                    on:arrowClick="_notifyHandler('detailArrowClick')"
                                    on:beforeBeginEdit="_notifyHandler('beforeBeginEdit')"
                                    on:beforeEndEdit="_notifyHandler('beforeEndEdit')"
                                    on:beforeItemsMove="_notifyHandler('detailBeforeItemsMove')"
                                    on:changeDragTarget="_notifyHandler('detailChangeDragTarget')"
                                    on:dragEnd="_notifyHandler('detailDragEnd')"
                                    on:dragEnter="_notifyHandler('detailDragEnter')"
                                    on:dragLeave="_notifyHandler('detailDragLeave')"
                                    on:dragMove="_notifyHandler('detailDragMove')"
                                    on:dragStart="_notifyHandler('detailDragStart')"
                                    on:drawItems="_notifyHandler('drawItems')"
                                    on:excludedKeysChanged="_notifyHandler('excludedKeysChanged')"
                                    on:selectedKeysChanged="_notifyHandler('selectedKeysChanged')"
                                    on:itemClick="_onExplorerItemClick(false)"
                                    on:itemMouseDown="_notifyHandler('detailItemMouseDown')"
                                    on:viewModeChanged="_onDetailExplorerChangedViewMode()"/>
                        </ws:content>
                        <ws:itemTemplate>
                            <!-- В режиме "таблица" или "поиск" нужно использовать шаблон строки таблицы -->
                            <ws:if data="{{_appliedViewMode === _viewModeEnum.table || _appliedViewMode === _viewModeEnum.search}}">
                                <Controls.treeGrid:ItemTemplate
                                        scope="{{itemTemplate}}"
                                        listConfiguration="{{_listConfiguration}}"
                                />
                            </ws:if>
                            <ws:else>
                                <ws:partial
                                        scope="{{itemTemplate}}"
                                        template="{{_detailExplorerOptions.itemTemplate || _options.detail.itemTemplate || _defaultItemTemplate}}"
                                        listConfiguration="{{_listConfiguration}}"
                                        imageViewMode="{{itemTemplate.imageViewMode}}"
                                        imagePosition="{{itemTemplate.imagePosition}}"
                                        listCfg="{{_listCfg}}"
                                />
                            </ws:else>
                        </ws:itemTemplate>
                        <ws:tileItemTemplate>
                            <ws:partial
                                    scope="{{tileItemTemplate}}"
                                    template="{{_detailExplorerOptions.tileItemTemplate || _options.detail.tileItemTemplate || _defaultTileItemTemplate}}"
                                    listConfiguration="{{_listConfiguration}}"
                                    imageViewMode="{{tileItemTemplate.imageViewMode}}"
                                    imagePosition="{{tileItemTemplate.imagePosition}}"
                                    tileCfg="{{_tileCfg}}"
                            />
                        </ws:tileItemTemplate>
                    </Controls.listTemplates:ImageDisplayContainer>
                </Controls.list:HotKeysContainer>
            </Controls.list:Container>
        </ws:else>
        <ws:if data="{{_options.detailFooterTemplate}}">
            <ws:partial template="{{_options.detailFooterTemplate}}"/>
        </ws:if>
    </div>
</ws:template>

<Controls.masterDetail:Base
        attr:class="controls-newBrowser"
        masterVisibility="{{_masterVisibility}}"
        propStorageId="{{_options.propStorageId}}"
        masterWidth="{{_options.master ? _options.master.width}}"
        masterMinWidth="{{_options.master ? _options.master.minWidth}}"
        masterMaxWidth="{{_options.master ? _options.master.maxWidth}}"
        newDesign="{{_options.master.newDesign}}"
        contrastBackground="{{_contrastBackground}}"
>

    <ws:master>
        <ws:if data="{{_options.wrapMasterInScroll}}">
            <Controls.scroll:Container attr:class="controls-newBrowser__scroll">
                <ws:partial template="masterTemplate"/>
            </Controls.scroll:Container>
        </ws:if>
        <ws:else>
            <ws:partial template="masterTemplate"/>
        </ws:else>
    </ws:master>

    <ws:detail>
        <ws:if data="{{_options.wrapDetailInScroll}}">
            <Controls.scroll:HotKeysContainer>
                <Controls.scroll:Container attr:class="controls-newBrowser__scroll">
                    <ws:partial template="detailTemplate"/>
                </Controls.scroll:Container>
            </Controls.scroll:HotKeysContainer>
        </ws:if>
        <ws:else>
            <ws:partial template="detailTemplate"/>
        </ws:else>
    </ws:detail>
</Controls.masterDetail:Base>
