<ws:template name="levelPadding">
    <ws:if data="{{collectionItem.shouldDisplayLevelPadding(withoutLevelPadding) }}">
        <ws:for data="i in collectionItem.getPropertyLevel() - 1">
            <div class="{{collectionItem.getLevelIndentClasses()}}"></div>
        </ws:for>
    </ws:if>
</ws:template>

<ws:template name="label">
  <ws:if data="{{collectionItem.isNode()}}">
    <div class="controls-PropertyGrid__editor_nodeCaption_wrapper">
      <Controls.heading:Title scope="{{_options}}"
                              readOnly="{{true}}"
                              fontSize="m"
                              tooltip="{{_options.caption}}"
                              attr:class="controls-PropertyGrid__editor_nodeCaption"/>
    </div>
  </ws:if>
  <ws:else>
    <Controls.input:Label scope="{{_options}}" attr:title="{{_options.caption}}"/>
  </ws:else>
</ws:template>

<ws:template name="defaultCaptionTemplate">
    <ws:partial template="label"
                caption="{{item.caption}}"
                scope="{{item.captionOptions}}"
                attr:class="controls-PropertyGrid__editor-caption
                                        controls-PropertyGrid__gridLayout_editor-caption-baseline"
                attr:tabindex="-1"
    />
</ws:template>

<ws:if data="{{_options.colspan || _options.colspanTemplate}}">
   <ws:partial template="{{_options.colspanTemplate}}"
               attr:class="{{collectionItem.isHovered() && highlightOnHover ? 'controls-PropertyGrid__cell_highlightOnHover'}}"
               attr:style="{{getEditorStyles(collectionItem, captionPosition, true)}}"
               item="{{_options.item}}"
               collectionItem="{{_options.collectionItem}}"/>
</ws:if>
<ws:else>
    <ws:if data="{{!item.editorOptions.jumpingLabel && (item.caption || item.captionTemplate)}}">
        <ws:if data="{{ multiSelectVisibility && multiSelectVisibility !== 'hidden'}}">
            <ws:if data="{{captionPosition === 'top'}}">
                <div style="{{getCheckboxStyles(collectionItem, captionPosition, true)}}"
                     class="{{collectionItem.isHovered() && highlightOnHover ? 'controls-PropertyGrid__cell_highlightOnHover'}}"></div>
            </ws:if>
            <div style="{{getCheckboxStyles(collectionItem, captionPosition)}}"
                 class="controls-PropertyGrid__cell_checkbox
                        {{collectionItem.isHovered() && highlightOnHover ? 'controls-PropertyGrid__cell_highlightOnHover'}}">
                <ws:partial template="{{collectionItem.getMultiSelectTemplate()}}"
                            item="{{collectionItem}}"/>
            </div>
        </ws:if>
        <div class="controls-PropertyGrid__gridLayout_editor-caption
                    {{collectionItem.isDragTargetNode() ? 'controls-PropertyGrid__dragTargetNode'}}
                    {{collectionItem.isDragged() ? 'controls-PropertyGrid__item_dragging'}}
                    {{collectionItem.isHovered() && highlightOnHover ? 'controls-PropertyGrid__cell_highlightOnHover'}}
                    {{collectionItem.getItemPaddingClasses(1)}}"
             data-qa="controls-PropertyGrid__editor-caption"
             style="{{getCaptionStyles(collectionItem, captionPosition, !collectionItem.getEditorTemplateName())}}">
            <ws:partial template="levelPadding"/>
            <ws:if data="{{item.captionTemplate}}">
                <ws:partial template="{{item.captionTemplate}}" item="{{item}}">
                    <ws:defaultCaptionTemplate>
                        <ws:partial template="defaultCaptionTemplate" item="{{item}}"/>
                    </ws:defaultCaptionTemplate>
                </ws:partial>
            </ws:if>
            <ws:else>
                <ws:partial template="defaultCaptionTemplate" item="{{item}}"/>
            </ws:else>
            <ws:if data="{{!collectionItem.getEditorTemplateName() && collectionItem.shouldDisplayActions()}}">
                <ws:if data="{{ !collectionItem.isSwiped() }}">
                    <ws:partial
                            attr:class="{{collectionItem.isHovered() ? 'controls-PropertyGrid__gridLayout_showActions'}}"
                            template="{{ itemActionsTemplate }}" />
                </ws:if>
            </ws:if>
            <ws:if data="{{!collectionItem.getEditorTemplateName() || options.captionPosition === 'top'}}">
                <ws:if data="{{afterEditorTemplate}}">
                    <ws:partial template="{{afterEditorTemplate}}"/>
                </ws:if>
            </ws:if>
        </div>
    </ws:if>
    <ws:if data="{{collectionItem.getEditorTemplateName()}}">
       <div class="controls-PropertyGrid__gridLayout_editor
                   {{collectionItem.isDragTargetNode() ? 'controls-PropertyGrid__dragTargetNode'}}
                   {{collectionItem.isDragged() ? 'controls-PropertyGrid__item_dragging'}}
                   {{(!item.caption || _options.captionPosition === 'top') ? 'controls-PropertyGrid__gridLayout_editor-withoutCaption'}}
                   {{collectionItem.isHovered() && highlightOnHover ? 'controls-PropertyGrid__cell_highlightOnHover'}}
                   {{collectionItem.getItemPaddingClasses(_options.captionPosition === 'top' ? 1 : 2)}}"
             data-qa="controls-PropertyGrid__editor"
             style="{{getEditorStyles(collectionItem, captionPosition, !item.caption)}}">
           <ws:if data="{{!(!item.editorOptions.jumpingLabel && item.caption) || (item.caption && _options.captionPosition === 'top')}}">
               <ws:partial template="levelPadding"/>
           </ws:if>
          <ws:partial template="wml!Controls/_propertyGrid/Render/resources/editorTemplate"
                      caption="{{item.caption}}"
                      attr:class="controls-PropertyGrid__editor_control"
                      scope="{{_options}}"/>
            <ws:if data="{{ collectionItem.shouldDisplayActions() }}">
                <ws:if data="{{ !collectionItem.isSwiped() }}">
                    <ws:partial
                            attr:class="{{collectionItem.isHovered() ? 'controls-PropertyGrid__gridLayout_showActions'}}"
                            template="{{ itemActionsTemplate }}" />
                </ws:if>
            </ws:if>
           <ws:if data="{{afterEditorTemplate && options.captionPosition !== 'top'}}">
               <ws:partial template="{{afterEditorTemplate}}"/>
           </ws:if>
        </div>
    </ws:if>
</ws:else>
